# Copyright 2023 Scott M. Long
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: CI/CD
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - '**'
    paths:
      - '**'
  push:
    branches:
      - main

jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: neuralnorthwest/actions/generate-go@main
      - run: |
          scripts/update-wc.sh
      - run: |
          git diff --quiet || (echo "ERROR: Generated files are not up to date" && exit 1)
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: neuralnorthwest/actions/test-go@main
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: neuralnorthwest/actions/lint-go@main
        with:
          no-cache: true
  check-license:
    name: Check License
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          scripts/check-license.sh
  detect-version:
    name: Detect Version
    outputs:
      version: ${{ steps.detect-version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: neuralnorthwest/actions/version-go@main
        id: detect-version
      - name: Verify Version
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
        run: |
          if git tag -l | grep -q ${{ steps.detect-version.outputs.version }}; then
            echo "ERROR: Version ${{ steps.detect-version.outputs.version }} already exists"
            exit 1
          fi
  check-goreleaser:
    name: Check Goreleaser
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          install-only: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Check
        run: |
          goreleaser build --clean --snapshot
  check-loc:
    name: Check LOC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          scripts/update-wc.sh
          git diff --exit-code
  release:
    name: Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - generate
      - test
      - lint
      - check-license
      - check-loc
      - check-goreleaser
      - detect-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}
          make release
